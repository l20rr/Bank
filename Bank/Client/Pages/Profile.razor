@page "/profile/{UserId}"
@using System.Net.Http
@using System.Text.Json
@using Bank.Client.Services;
@inject HttpClient httpClient
@using Bank.Shared

<header>
    <b>LOGO</b>
    <div id="search">
        <input type="text" @bind="Symbol" />
        <button @onclick="Search">Pesquisar</button>
    </div>
    <a href="Login">
        Entrar
    </a>
    <div class="dropdown">
        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
            Dropdown button
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="/profile">Perfil</a></li>
            <li><a class="dropdown-item" href="/wallet">Carteira</a></li>
            <hr />
            <li><a class="dropdown-item" href="/">Sair</a></li>
        </ul>
    </div>
</header>

<div class="central">

    @if (User != null)
    {
        <form Model="@User">
            <h2>Perfil</h2>
            <div class="form-group">
                <h4 for="exampleInputName">Nome:</h4>
                <p class="form-control" id="exampleInputName"> @User.FirstName</p>
            </div>
            <div class="form-group">
                <h4 for="exampleInputLastName">Apelido</h4>
                <p class="form-control" id="exampleInputLastName">  @User.LastName </p>
            </div>
            <div class="form-group">
                <h4 for="exampleInputEmail1">Email</h4>
                <p class="form-control" id="exampleInputEmail1"> @User.Email </p>
            </div>
            <div class="form-group">
                <h4 for="exampleInputPassword1">Password</h4>
                <p class="form-control" id="exampleInputPassword1"> @User.UPassword </p>
            </div>
            <a href="/Edit/4">Edit User </a>
        </form>
    
    }
    else
    {
        <p>Loading user data...</p>
    }
</div>



@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private string Symbol;

    private async Task Search()
    {
        NavigationManager.NavigateTo($"/Details/{Symbol}");
    }
    [Parameter]
    public string UserId { get; set; }
    private User User { get; set; } = new User();

    [Inject]
    public IUserDataService UserDataService { get; set; }

    protected async override Task OnInitializedAsync()
    {
        User = await UserDataService.GetUserId(int.Parse(UserId));
    }

}