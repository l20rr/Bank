@inject Blazored.LocalStorage.ILocalStorageService localStore

<header>
    <a href="/"> <b>LOGO</b></a>
    <div id="search">
        <input type="text" @bind="Symbol" />
        <button id="btn-sh" @onclick="Search">Pesquisar</button>
    </div>
    @if (!string.IsNullOrEmpty(CurrentUserIdString) && int.TryParse(CurrentUserIdString, out int CurrentUserId))
    {
        <div class="dropdown">
            <button type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown">
                Menu
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="@GetProfileLink()">Perfil</a></li>
                <li id="SearchT"><a class="dropdown-item" href="@GetSearchLink()">Pesquisar</a></li>
                <li><a class="dropdown-item" href="@GetWalletLink()">Carteira</a></li>
                <hr />
                <li><button class="dropdown-item" @onclick="Logout">Sair</button></li>
            </ul>
        </div>
    }
    else
    {
        <a href="Login">
            Entrar
        </a>
    }
</header>

@code {
    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private string Symbol;
    private string CurrentUserIdString;

    private async Task Search()
    {
        NavigationManager.NavigateTo($"/Details/{Symbol}");
    }

    protected override async Task OnInitializedAsync()
    {
        CurrentUserIdString = await localStore.GetItemAsync<string>("CurrentUserId");
    }

    private string GetProfileLink() => $"/profile";
    private string GetWalletLink() => $"/wallet";
    private string GetSearchLink() => $"/Details/GOOG";
    private async Task Logout()
    {
        await localStore.RemoveItemAsync("CurrentUserId");
        NavigationManager.NavigateTo("/", forceLoad: true);
    }
}
